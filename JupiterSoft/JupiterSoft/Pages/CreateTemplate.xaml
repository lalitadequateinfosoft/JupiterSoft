<Page x:Class="JupiterSoft.Pages.CreateTemplate"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:JupiterSoft.Pages"
      xmlns:ui="http://schemas.modernwpf.com/2019"
      xmlns:controls="clr-namespace:Ozeki.Media;assembly=OzekiSDK"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="CreateTemplate">

    <Page.Resources>
        <ResourceDictionary>

            <Style TargetType="Button" x:Key="RunButton" >
                <Setter Property="Background" Value="#0082ca" />
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="2,2,2,2" Background="#0082ca" BorderBrush="#0082ca" BorderThickness="2" Width="90" Height="45" Padding="12,3,12,3" Margin="0,0,0,1">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="SaveButton" >
                <Setter Property="Background" Value="#041124" />
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="2,2,2,2" Background="#fff" BorderBrush="#041124" BorderThickness="1" Width="90" Height="45" Padding="12,3,12,3" Margin="0,0,0,1">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ResetButton" >
                <Setter Property="Background" Value="Red" />
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="2,2,2,2" Background="Red" BorderBrush="#f7353f" BorderThickness="1" Width="90" Height="45" Padding="12,3,12,3" Margin="0,0,0,1">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Closebtn" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Padding="4" Margin="-12,-4,0,0" Width="20" Height="20" CornerRadius="15">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Tab Style-->
            <Style x:Key="TabItemStyle" TargetType="TabItem">
                <Setter Property="Background" Value="#9c9c9c"/>
                <Setter Property="Padding" Value="15,5,15,5"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border>
                                <Grid>
                                    <Grid>
                                        <Border x:Name="border" 
                                            CornerRadius="0,5,0,0"
                                            Background="#9c9c9c" Height="45" Width="120" Margin="0,0,1,0"/>
                                    </Grid>
                                    <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                     Value="True">
                                    <Setter TargetName="border"
                                        Property="Background"
                                        Value="#0082ca" />
                                    <Setter Property="Background" Value="#0082ca"/>
                                </Trigger>
                                <Trigger Property="IsSelected"
                                     Value="True">
                                    <Setter TargetName="border"
                                        Property="Background"
                                        Value="#0082ca" />
                                    <Setter Property="Background" Value="#0082ca"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TextButton" TargetType="Button">
                <Setter Property="Background" Value="#041124"/>
                <Setter Property="Foreground" Value="#fff"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" BorderThickness="1" CornerRadius="5" Padding="4">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#041124"/>

                        <Setter Property="BorderBrush" Value="#041124"/>
                    </Trigger>


                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#041124"/>

                        <Setter Property="BorderBrush" Value="#041124"/>
                    </Trigger>

                </Style.Triggers>
            </Style>

            <Style x:Key="StackPanelLink" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="#c9c9c9" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">

                        <Setter Property="Border.BorderBrush" Value="#041124" />

                    </Trigger>

                    <Trigger Property="IsFocused" Value="true">

                        <Setter Property="Border.BorderBrush" Value="#041124" />

                    </Trigger>
                    <Trigger Property="IsMouseCaptured" Value="true">

                        <Setter Property="Border.BorderBrush" Value="#041124" />

                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Move Button Style Start-->
            <Style x:Key="BlueMove10" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Path Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1.5" StrokeStartLineCap="Square" StrokeEndLineCap="Square" StrokeLineJoin="Round" Fill="{TemplateBinding Background}" Data="M 0,0 H10,10 L15,10 H15,15 L16,10 h14,0 L35,0 h0,85 h0,0 V32,32 H35,35 L30,41 H15 L10,32 H0,0 V0,0 Z" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Content="move" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-5,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                                    <Border Grid.Column="1" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Background="#fff" Margin="0,-10,0,0" BorderBrush="#3774cd" Padding="10,5,10,5"  HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="Black" FontFamily="{TemplateBinding FontFamily}" />
                                    </Border>
                                    <Label Grid.Column="2" Content="steps" VerticalAlignment="Center" Margin="0,-8,0,0" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                                </Grid>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlueMoveRight" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Path Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1.5" StrokeStartLineCap="Square" StrokeEndLineCap="Square" StrokeLineJoin="Round" Fill="{TemplateBinding Background}" Data="M 0,0 H10,10 L15,10 H15,15 L16,10 h14,0 L35,0 h0,114 h0,0 V32,32 H35,35 L30,41 H15 L10,32 H0,0 V0,0 Z" />

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Content="move" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-5,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                                    <Image Source="/assets/rotate-right-32.png" Grid.Column="1" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-8,0,0"/>
                                    <Border Grid.Column="2" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Background="#fff" Margin="0,-10,0,0" BorderBrush="#3774cd" Padding="10,5,10,5"  HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="Black" FontFamily="{TemplateBinding FontFamily}" />
                                    </Border>
                                    <Label Grid.Column="3" Content="steps" VerticalAlignment="Center" Margin="0,-8,0,0" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                                </Grid>


                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlueMoveLeft" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Path Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1.5" StrokeStartLineCap="Square" StrokeEndLineCap="Square" StrokeLineJoin="Round" Fill="{TemplateBinding Background}" Data="M 0,0 H10,10 L15,10 H15,15 L16,10 h14,0 L35,0 h0,114 h0,0 V32,32 H35,35 L30,41 H15 L10,32 H0,0 V0,0 Z" />

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Content="move" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-5,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                                    <Image Source="/assets/rotate-left-32.png" Grid.Column="1" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-8,0,0"/>
                                    <Border Grid.Column="2" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Background="#fff" Margin="0,-10,0,0" BorderBrush="#3774cd" Padding="10,5,10,5"  HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="Black" FontFamily="{TemplateBinding FontFamily}" />
                                    </Border>
                                    <Label Grid.Column="3" Content="steps" VerticalAlignment="Center" Margin="0,-8,0,0" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                                </Grid>


                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="BlueMovePointer" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Path Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" StrokeStartLineCap="Square" StrokeEndLineCap="Square" StrokeLineJoin="Round" Fill="{TemplateBinding Background}" Data="M 0,0 H10,10 L15,10 H15,15 L16,10 h14,0 L35,0 h0,164.5 h0,0 V32,32 H35,35 L30,41 H15 L10,32 H0,0 V0,0 Z" />

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="92"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Content="pointer-towards" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-5,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>


                                    <ComboBox Grid.Column="1"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="102" Height="25" Margin="0,-10,0,0" Background="#0082ca" Foreground="#fff" BorderBrush="#01598a" BorderThickness="1" Style="{DynamicResource BlueMoveComboBoxStyle}" FontSize="9" FontWeight="Normal">
                                        <ComboBoxItem Content="mouse-pointer" IsSelected="True"></ComboBoxItem>
                                        <ComboBoxItem Content="Right"></ComboBoxItem>

                                    </ComboBox>


                                </Grid>


                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlueMoveComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}"/>
                <Setter Property="MaxDropDownHeight" Value="504"/>
                <Setter Property="Foreground" Value="#fff"/>
                <Setter Property="Background" Value="{DynamicResource ComboBoxBackground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}"/>
                <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
                <Setter Property="ui:ComboBoxHelper.TextBoxStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Grid SnapsToDevicePixels="True">
                                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10"/>
                                            <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{DynamicResource TextControlContentHostStyle}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"/>
                                            <TextBlock x:Name="PlaceholderTextContentPresenter" Foreground="#fff" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}" Visibility="Collapsed"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundDisabled}"/>
                                                <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushDisabled}"/>
                                                <Setter Property="Foreground" TargetName="PART_ContentHost" Value="#fff"/>
                                                <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="#fff"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundPointerOver}"/>
                                                <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
                                                <Setter Property="Foreground" TargetName="PART_ContentHost" Value="{DynamicResource TextControlForegroundPointerOver}"/>
                                                <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}"/>
                                            </Trigger>
                                            <Trigger Property="IsSelectionActive" Value="True">
                                                <Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundFocused}"/>
                                                <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushFocused}"/>
                                                <Setter Property="BorderThickness" TargetName="BorderElement" Value="{DynamicResource TextControlBorderThemeThicknessFocused}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}"/>
                                                <Setter Property="CaretBrush" Value="{DynamicResource TextControlForegroundFocused}"/>
                                                <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundFocused}"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="">
                                                <Setter Property="Visibility" TargetName="PlaceholderTextContentPresenter" Value="Visible"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Foreground" Value="#fff"/>
                                    <Setter Property="Background" Value="{DynamicResource TextControlBackground}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}"/>
                                    <Setter Property="SelectionBrush" Value="{DynamicResource TextControlSelectionHighlightColor}"/>
                                    <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                                    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
                                    <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                    <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                                    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}"/>
                                    <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}"/>
                                    <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}"/>
                                    <Setter Property="ui:ControlHelper.CornerRadius" Value="10"/>
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="ContextMenu" Value="{DynamicResource TextControlContextMenu}"/>
                                    <Setter Property="ui:TextContextMenu.UsingTextContextMenu" Value="True"/>
                                    <Setter Property="ui:TextBoxHelper.IsEnabled" Value="True"/>
                                    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource TextControlValidationErrorTemplate}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                <ControlTemplate.Resources>
                                                    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <ControlTemplate.Resources>
                                                                        <StreamGeometry x:Key="Cancel">M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z</StreamGeometry>
                                                                    </ControlTemplate.Resources>
                                                                    <Border x:Name="ButtonLayoutGrid" BorderBrush="{DynamicResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource TextControlButtonBackground}" CornerRadius="10">
                                                                        <ui:FontIconFallback x:Name="GlyphElement" Data="M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z" Foreground="{DynamicResource TextControlButtonForeground}" FontStyle="Normal" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPointerOver}"/>
                                                                            <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}"/>
                                                                            <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPointerOver}"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPressed}"/>
                                                                            <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPressed}"/>
                                                                            <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPressed}"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="ButtonLayoutGrid" Value="0"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ControlTemplate.Resources>
                                                <Grid SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="ButtonStates">
                                                            <VisualState x:Name="ButtonVisible">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="ButtonCollapsed"/>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <ui:ContentPresenterEx x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ui:ControlHelper.HeaderTemplate}" Content="{TemplateBinding ui:ControlHelper.Header}" Grid.Column="0" Foreground="{DynamicResource TextControlHeaderForeground}" FontWeight="Normal" Margin="{DynamicResource TextBoxTopHeaderMargin}" Grid.Row="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap" Visibility="{TemplateBinding ui:ControlHelper.HeaderVisibility}" VerticalAlignment="Top"/>
                                                    <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="10" Validation.ErrorTemplate="{x:Null}" ui:ValidationHelper.IsTemplateValidationAdornerSite="True" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Grid.Row="1" Grid.RowSpan="1" Validation.ValidationAdornerSiteFor="{x:Null}"/>
                                                    <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource TextControlContentHostStyle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}"/>
                                                    <Button x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Focusable="False" FontSize="{TemplateBinding FontSize}" IsTabStop="False" ui:TextBoxHelper.IsDeleteButton="True" MinWidth="34" Padding="{DynamicResource HelperButtonThemePadding}" Grid.Row="1" Visibility="Collapsed" VerticalAlignment="Stretch">
                                                        <ui:ControlHelper.CornerRadius>
                                                            <TemplateBinding Property="ui:ControlHelper.CornerRadius">
                                                                <TemplateBinding.Converter>
                                                                    <ui:CornerRadiusFilterConverter Filter="Right" Scale="1"/>
                                                                </TemplateBinding.Converter>
                                                            </TemplateBinding>
                                                        </ui:ControlHelper.CornerRadius>
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <ControlTemplate.Resources>
                                                                                <StreamGeometry x:Key="Cancel">M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z</StreamGeometry>
                                                                            </ControlTemplate.Resources>
                                                                            <Border x:Name="ButtonLayoutGrid" BorderBrush="{DynamicResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource TextControlButtonBackground}" CornerRadius="10">
                                                                                <ui:FontIconFallback x:Name="GlyphElement" Data="M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z" Foreground="{DynamicResource TextControlButtonForeground}" FontStyle="Normal" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPointerOver}"/>
                                                                                    <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}"/>
                                                                                    <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPointerOver}"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPressed}"/>
                                                                                    <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPressed}"/>
                                                                                    <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPressed}"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" TargetName="ButtonLayoutGrid" Value="0"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <ContentPresenter x:Name="DescriptionPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding ui:ControlHelper.Description}" Grid.Column="0" TextElement.Foreground="{DynamicResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ui:ControlHelper.DescriptionVisibility}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="ui:ControlHelper.PlaceholderForeground" Value="{x:Null}">
                                                        <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForeground}"/>
                                                    </Trigger>
                                                    <Trigger Property="ui:TextBoxHelper.HasText" Value="True">
                                                        <Setter Property="Visibility" TargetName="PlaceholderTextContentPresenter" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="{DynamicResource TextControlHeaderForegroundDisabled}"/>
                                                        <Setter Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}"/>
                                                        <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushDisabled}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}"/>
                                                        <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
                                                        <Setter Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}"/>
                                                        <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsSelectionActive" Value="True">
                                                        <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundFocused}"/>
                                                        <Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}"/>
                                                        <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushFocused}"/>
                                                        <Setter Property="BorderThickness" TargetName="BorderElement" Value="{DynamicResource TextControlBorderThemeThicknessFocused}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsKeyboardFocused" Value="True"/>
                                                            <Condition Property="ui:TextBoxHelper.HasText" Value="True"/>
                                                            <Condition Property="IsReadOnly" Value="False"/>
                                                            <Condition Property="AcceptsReturn" Value="False"/>
                                                            <Condition Property="TextWrapping" Value="NoWrap"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ui:TextBoxHelper.IsDeleteButtonVisible" Value="True"/>
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
                <Setter Property="ui:ControlHelper.PlaceholderForeground" Value="{DynamicResource ComboBoxPlaceHolderForeground}"/>
                <Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource IsApplicationFocusVisualKindReveal}"/>
                <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
                <Setter Property="ui:ComboBoxHelper.KeepInteriorCornersSquare" Value="True"/>
                <Setter Property="ui:ControlHelper.CornerRadius" Value="10"/>
                <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource TextControlValidationErrorTemplate}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <ControlTemplate.Resources>
                                <StreamGeometry x:Key="ChevronDown">M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z</StreamGeometry>
                            </ControlTemplate.Resources>
                            <Grid x:Name="LayoutRoot" SnapsToDevicePixels="True">
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ui:ContentPresenterEx x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ui:ControlHelper.HeaderTemplate}" Content="{TemplateBinding ui:ControlHelper.Header}" Grid.Column="0" Foreground="{DynamicResource ComboBoxHeaderForeground}" FontWeight="{DynamicResource ComboBoxHeaderThemeFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" Margin="{DynamicResource ComboBoxTopHeaderMargin}" Grid.Row="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap" Visibility="{TemplateBinding ui:ControlHelper.HeaderVisibility}" VerticalAlignment="Top"/>
                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="10" Validation.ErrorTemplate="{x:Null}" ui:ValidationHelper.IsTemplateValidationAdornerSite="True" MinWidth="{DynamicResource ComboBoxThemeMinWidth}" Grid.Row="1" Validation.ValidationAdornerSiteFor="{x:Null}"/>
                                <Border x:Name="HighlightBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="10" Opacity="0" Grid.Row="1"/>
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <TextBlock x:Name="PlaceholderTextBlock" Grid.Column="0" Foreground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Padding="0,0,32,0" Grid.Row="1" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ToggleButton x:Name="ToggleButton" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="ClickMode" Value="Release"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <TextBox x:Name="PART_EditableTextBox" BorderBrush="Transparent" Grid.ColumnSpan="2" Grid.Column="0" ui:ControlHelper.CornerRadius="10" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="0" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" ui:ControlHelper.PlaceholderForeground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" Padding="{DynamicResource ComboBoxEditableTextPadding}" ui:ControlHelper.PlaceholderText="{TemplateBinding ui:ControlHelper.PlaceholderText}" Grid.Row="1" Style="{TemplateBinding ui:ComboBoxHelper.TextBoxStyle}" Visibility="Collapsed" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ToggleButton x:Name="DropDownOverlay" Background="Transparent" Grid.Column="1" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,1,1,1" Grid.Row="1" Visibility="Collapsed" Width="30">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="ClickMode" Value="Release"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ui:FontIconFallback x:Name="DropDownGlyph" Grid.Column="1" Data="M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z" Foreground="#fff" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,10,0" MinHeight="{DynamicResource ComboBoxMinHeight}" Grid.Row="1" VerticalAlignment="Center"/>
                                <ContentPresenter x:Name="DescriptionPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding ui:ControlHelper.Description}" Grid.Column="0" TextElement.Foreground="{DynamicResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ui:ControlHelper.DescriptionVisibility}"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="None" Placement="Bottom">
                                    <Popup.PlacementRectangle>
                                        <MultiBinding UpdateSourceTrigger="Default">
                                            <MultiBinding.Converter>
                                                <ui:PlacementRectangleConverter Margin="0,-5"/>
                                            </MultiBinding.Converter>
                                            <Binding ElementName="Background" Path="ActualWidth"/>
                                            <Binding ElementName="Background" Path="ActualHeight"/>
                                        </MultiBinding>
                                    </Popup.PlacementRectangle>
                                    <ui:ThemeShadowChrome x:Name="Show" CornerRadius="10" IsShadowEnabled="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="28.8,28.8,28.8,41.6" MinWidth="{Binding ActualWidth, ElementName=LayoutRoot}">
                                        
                                        <Border x:Name="PopupBorder" Background="{DynamicResource ComboBoxDropDownBackground}" CornerRadius="0" HorizontalAlignment="Stretch">
                                            <Border BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}" BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}" CornerRadius="0" Padding="{DynamicResource ComboBoxDropdownBorderPadding}" >
                                                <ScrollViewer x:Name="ScrollViewer" Foreground="{DynamicResource ComboBoxDropDownForeground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" Margin="{DynamicResource ComboBoxDropdownContentMargin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                            </Border>
                                        </Border>
                                    </ui:ThemeShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="#0082ca"/>
                                    <Setter Property="BorderBrush" TargetName="Background" Value="#01598a"/>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="#fff"/>
                                    <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="#fff"/>
                                </Trigger>
                                <Trigger Property="IsPressed" SourceName="ToggleButton" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="#0082ca"/>
                                    <Setter Property="BorderBrush" TargetName="Background" Value="#01598a"/>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="#fff"/>
                                    <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="#fff"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="Background" Value="#0082ca"/>
                                    <Setter Property="BorderBrush" TargetName="Background" Value="#01598a"/>
                                    <Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="#0082ca"/>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="#fff"/>
                                    <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="#fff"/>
                                    <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}"/>
                                </Trigger>
                                <Trigger Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True">
                                    <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                    <Setter Property="Background" TargetName="HighlightBackground" Value="{DynamicResource ComboBoxBackgroundFocused}"/>
                                    <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="{DynamicResource ComboBoxBackgroundBorderBrushFocused}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundFocused}"/>
                                    <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocused}"/>
                                    <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocused}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True"/>
                                        <Condition Property="IsPressed" SourceName="ToggleButton" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundFocusedPressed}"/>
                                    <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocusedPressed}"/>
                                    <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocusedPressed}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True"/>
                                        <Condition Property="IsDropDownOpen" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="PopupBorder" Value="Visible"/>
                                </MultiTrigger>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter Property="Visibility" TargetName="ContentPresenter" Value="Collapsed"/>
                                    <Setter Property="Visibility" TargetName="ToggleButton" Value="Collapsed"/>
                                    <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="DropDownOverlay" Value="Visible"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="False"/>
                                        <Condition Property="SelectedIndex" Value="-1"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="PlaceholderTextBlock" Value="Visible"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
                                        <Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="False"/>
                                        <Condition Property="IsPressed" SourceName="DropDownOverlay" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
                                    <Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
                                        <Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
                                    <Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerOver}"/>
                                    <Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
                                        <Condition Property="IsPressed" SourceName="DropDownOverlay" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
                                    <Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerPressed}"/>
                                    <Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="False"/>
                                        <Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxDropDownBackgroundPointerOver}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="False"/>
                                        <Condition Property="IsPressed" SourceName="DropDownOverlay" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxDropDownBackgroundPointerPressed}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlueMoveRotation" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Path Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" StrokeStartLineCap="Square" StrokeEndLineCap="Square" StrokeLineJoin="Round" Fill="{TemplateBinding Background}" Data="M 0,0 H10,10 L15,10 H15,15 L16,10 h14,0 L35,0 h0,139 h0,0 V32,32 H35,35 L30,41 H15 L10,32 H0,0 V0,0 Z" />

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="92"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Content="pointer-towards" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-5,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>


                                    <ComboBox Grid.Column="1"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="75" Height="25" Margin="0,-10,0,0" Background="#0082ca" Foreground="#fff" BorderBrush="#01598a" BorderThickness="1" Style="{DynamicResource BlueMoveComboBoxStyle}" FontSize="9" FontWeight="Normal">
                                        <ComboBoxItem Content="left-right" IsSelected="True"></ComboBoxItem>
                                        <ComboBoxItem Content="right-left"></ComboBoxItem>
                                        <ComboBoxItem Content="top-bottom"></ComboBoxItem>
                                        <ComboBoxItem Content="bottom-top"></ComboBoxItem>

                                    </ComboBox>


                                </Grid>


                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <!--Move Button Style End-->

        </ResourceDictionary>
    </Page.Resources>

    <Border Margin="40" CornerRadius="10" Padding="10,10,10,10">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TabControl Grid.Row="0"  Grid.Column="0" Background="Transparent" >
                <TabItem Style="{StaticResource TabItemStyle}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Text="Code" Foreground="#fff" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Background="#fff" BorderBrush="#fff" BorderThickness="1" Margin="7.5,2,0,2.5" Padding="2" CornerRadius="0,0,0,10">
                        <Grid Background="#fefefe" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="290"/>
                                <ColumnDefinition Width="380"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="#fff" BorderThickness="1" Grid.Row="0" Grid.Column="0" >
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>

                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid x:Name="buttonGrid1" Grid.Row="0" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
                                            <Border BorderBrush="#eee" BorderThickness="1" Margin="5,5,5,5" Padding="3,3,3,3" CornerRadius="5" Background="#fff" PreviewMouseLeftButtonDown="Border_PreviewMouseLeftButtonDown">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Ellipse
    Width="28"
    Height="28"
    Stroke="#bae8fe"
    StrokeThickness="4"
    Canvas.Left="135"
    Canvas.Top="100"
      Fill="#0082ca"                                              />
                                                    <Label Content="Motion" FontSize="10" FontWeight="Bold" Foreground="#6c717c"/>
                                                </StackPanel>
                                            </Border>

                                        </Grid>

                                        <Grid x:Name="buttonGrid2" Grid.Row="1" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
                                            <Border BorderBrush="#eee" BorderThickness="1" Margin="5,5,5,5" Padding="3,3,3,3" CornerRadius="5" Background="#fff" PreviewMouseLeftButtonDown="Border_PreviewMouseLeftButtonDown">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Ellipse
    Width="28"
    Height="28"
    Stroke="#f7d5ff"
    StrokeThickness="4"
    Canvas.Left="135"
    Canvas.Top="100"
      Fill="#df88f9"                                              />
                                                    <Label Content="Events" FontSize="10" FontWeight="Bold" Foreground="#6c717c"/>
                                                </StackPanel>
                                            </Border>

                                        </Grid>
                                        <Grid x:Name="buttonGrid3" Grid.Row="2" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
                                            <Border BorderBrush="#eee" BorderThickness="1" Margin="5,5,5,5" Padding="3,3,3,3" CornerRadius="5" Background="#fff" PreviewMouseLeftButtonDown="Border_PreviewMouseLeftButtonDown">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Ellipse
    Width="28"
    Height="28"
    Stroke="#ffdab2"
    StrokeThickness="4"
    Canvas.Left="135"
    Canvas.Top="100"
      Fill="#ffa94c"                                              />
                                                    <Label Content="Control" FontSize="10" FontWeight="Bold" Foreground="#6c717c"/>
                                                </StackPanel>
                                            </Border>
                                        </Grid>
                                        <Grid x:Name="buttonGrid4" Grid.Row="3" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
                                            <Border BorderBrush="#eee" BorderThickness="1" Margin="5,5,5,5" Padding="3,3,3,3" CornerRadius="5" Background="#fff" PreviewMouseLeftButtonDown="Border_PreviewMouseLeftButtonDown">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Ellipse
    Width="28"
    Height="28"
    Stroke="#ffc3c8"
    StrokeThickness="2"
    Canvas.Left="135"
    Canvas.Top="100"
      Fill="#f97279"                                              />
                                                    <Label Content="Sensing" FontSize="10" FontWeight="Bold" Foreground="#6c717c"/>
                                                </StackPanel>
                                            </Border>
                                        </Grid>
                                        <Grid x:Name="buttonGrid5" Grid.Row="4" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
                                            <Border BorderBrush="#eee" BorderThickness="1" Margin="5,5,5,5" Padding="3,3,3,3" CornerRadius="5" Background="#fff" PreviewMouseLeftButtonDown="Border_PreviewMouseLeftButtonDown">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Ellipse
    Width="28"
    Height="28"
    Stroke="#fecbec"
    StrokeThickness="2"
    Canvas.Left="135"
    Canvas.Top="100"
      Fill="#ed53b5"                                              />
                                                    <Label Content="Operators" FontSize="10" FontWeight="Bold" Foreground="#6c717c"/>
                                                </StackPanel>
                                            </Border>
                                        </Grid>
                                        <Grid x:Name="buttonGrid6" Grid.Row="5" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
                                            <Border BorderBrush="#eee" BorderThickness="1" Margin="5,5,5,5" Padding="3,3,3,3" CornerRadius="5" Background="#fff" PreviewMouseLeftButtonDown="Border_PreviewMouseLeftButtonDown">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Ellipse
    Width="28"
    Height="28"
    Stroke="#cbfef5"
    StrokeThickness="2"
    Canvas.Left="135"
    Canvas.Top="100"
      Fill="#4cc2aa"                                              />
                                                    <Label Content="Looks" FontSize="10" FontWeight="Bold" Foreground="#6c717c"/>
                                                </StackPanel>
                                            </Border>
                                        </Grid>
                                        <Grid x:Name="buttonGrid7" Grid.Row="6" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Cursor="Hand">
                                            <Border BorderBrush="#eee" BorderThickness="1" Margin="5,5,5,5" Padding="3,3,3,3" CornerRadius="5" Background="#fff" PreviewMouseLeftButtonDown="Border_PreviewMouseLeftButtonDown">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Ellipse
    Width="28"
    Height="28"
    Stroke="#c5dafe"
    StrokeThickness="2"
    Canvas.Left="135"
    Canvas.Top="100"
      Fill="#60718d"                                              />
                                                    <Label Content="Sounds" FontSize="10" FontWeight="Bold" Foreground="#6c717c"/>
                                                </StackPanel>
                                            </Border>
                                        </Grid>

                                    </Grid>
                                </StackPanel>
                            </Border>
                            <Border BorderBrush="#fff" BorderThickness="1" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" Cursor="Arrow">

                                <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="ButtonAreaScroll">
                                    <Grid x:Name="MyGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="400"/>
                                            <RowDefinition Height="400"/>
                                            <RowDefinition Height="400"/>
                                            <RowDefinition Height="400"/>
                                            <RowDefinition Height="400"/>
                                            <RowDefinition Height="400"/>
                                            <RowDefinition Height="400"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel x:Name="ButtonGridArea1" Grid.Row="0" HorizontalAlignment="Center" Margin="10"  Width="250" AllowDrop="True">


                                            <Button x:Name="Ten_Steps_Move" Margin="12,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#2a6a8e" Background="#0082ca" BorderThickness="2" FontSize="10" Foreground="#fff" FontWeight="Bold" FontFamily="Georgia, serif;" Content="10"  Style="{StaticResource BlueMove10}"  Width="121" Height="42" PreviewMouseMove="Button_PreviewMouseMove" IsHitTestVisible="{Binding IsChildHitTestVisible, ElementName=root}" Tag="{Binding Ten_Steps_Move,Mode=OneWay}" />


                                            <Button x:Name="Turn_Fiften_Degree_Right_Move" Margin="12,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#2a6a8e" Background="#0082ca" BorderThickness="2" FontSize="10" Foreground="#fff" FontWeight="Bold" FontFamily="Georgia, serif;" Content="15" Width="150" Height="42" Style="{StaticResource BlueMoveRight}" PreviewMouseMove="Button_PreviewMouseMove" IsHitTestVisible="{Binding IsChildHitTestVisible, ElementName=root}" Tag="{Binding Turn_Fiften_Degree_Right_Move,Mode=OneWay}" />

                                            <Button x:Name="Turn_Fiften_Degree_Left_Move" Margin="12,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#2a6a8e" Background="#0082ca" BorderThickness="2" FontSize="10" Foreground="#fff" FontWeight="Bold" FontFamily="Georgia, serif;" Content="15" Width="150" Height="42" Style="{StaticResource BlueMoveLeft}" PreviewMouseMove="Button_PreviewMouseMove" IsHitTestVisible="{Binding IsChildHitTestVisible, ElementName=root}" Tag="{Binding Turn_Fiften_Degree_Left_Move,Mode=OneWay}"/>


                                            <Button x:Name="Pointer_State_Move" Margin="12,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#2a6a8e" Background="#0082ca" BorderThickness="2" FontSize="10" Foreground="#fff" FontWeight="Bold" FontFamily="Georgia, serif;" Width="200" Height="42" Style="{StaticResource BlueMovePointer}" PreviewMouseMove="Button_PreviewMouseMove" IsHitTestVisible="{Binding IsChildHitTestVisible, ElementName=root}" Tag="{Binding Pointer_State_Move,Mode=OneWay}"/>

                                            <Button x:Name="Rotation_Style_Move" Margin="12,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#2a6a8e" Background="#0082ca" BorderThickness="2" FontSize="10" Foreground="#fff" FontWeight="Bold" FontFamily="Georgia, serif;"  Width="175" Height="42" Style="{StaticResource BlueMoveRotation}" PreviewMouseMove="Button_PreviewMouseMove" IsHitTestVisible="{Binding IsChildHitTestVisible, ElementName=root}" Tag="{Binding Rotation_Style_Move,Mode=OneWay}"/>







                                        </StackPanel>

                                        <StackPanel x:Name="ButtonGridArea2" Grid.Row="1" HorizontalAlignment="Center" Margin="10" MouseEnter="ButtonGrid_MouseEnter" Width="250" MouseLeave="ButtonGrid_MouseLeave">

                                            
                                        </StackPanel>


                                        <StackPanel x:Name="ButtonGridArea3" Grid.Row="2" HorizontalAlignment="Center" Margin="10" MouseEnter="ButtonGrid_MouseEnter" Width="250" MouseLeave="ButtonGrid_MouseLeave">

                                            

                                        </StackPanel>

                                        <StackPanel x:Name="ButtonGridArea4" Grid.Row="3" HorizontalAlignment="Center" Margin="10" MouseEnter="ButtonGrid_MouseEnter" Width="250" MouseLeave="ButtonGrid_MouseLeave">

                                            

                                        </StackPanel>

                                        <StackPanel x:Name="ButtonGridArea5" Grid.Row="4" HorizontalAlignment="Center" Margin="10" MouseEnter="ButtonGrid_MouseEnter" Width="250" MouseLeave="ButtonGrid_MouseLeave">

                                            


                                        </StackPanel>

                                        <StackPanel x:Name="ButtonGridArea6" Grid.Row="5" HorizontalAlignment="Center" Margin="10" MouseEnter="ButtonGrid_MouseEnter" Width="250" MouseLeave="ButtonGrid_MouseLeave">

                                            

                                        </StackPanel>

                                        <StackPanel x:Name="ButtonGridArea7"  Grid.Row="6" HorizontalAlignment="Center" Margin="10" MouseEnter="ButtonGrid_MouseEnter" Width="250" MouseLeave="ButtonGrid_MouseLeave">

                                            


                                        </StackPanel>

                                    </Grid>
                                </ScrollViewer>

                            </Border>
                            <StackPanel Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Orientation="Vertical" Cursor="Arrow" Background="#eee" AllowDrop="False">
                                
                                
                                    <ScrollViewer VerticalScrollBarVisibility="Hidden" Height="500" Cursor="Hand">
                                    <Canvas x:Name="ReceiveDrop" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="700" Cursor="Hand" Width="370" AllowDrop="True" Background="Transparent" Drop="Canvas_Drop" DragOver="Canvas_DragOver" DragLeave="Canvas_DragLeave" DragEnter="ReceiveDrop_DragEnter" PreviewMouseMove="ReceiveDrop_PreviewMouseMove" PreviewMouseUp="ReceiveDrop_PreviewMouseUp">
                                        


                                    </Canvas>
                                    </ScrollViewer>
                              
                            </StackPanel>

                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Style="{StaticResource TabItemStyle}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Devices" Foreground="#fff" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Background="#fefefe" BorderBrush="#fff" BorderThickness="1" Margin="7.5,2,0,2.5" Padding="0" CornerRadius="0,0,0,10">
                        <Grid Background="#fefefe" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="210"/>
                                <ColumnDefinition Width="526"/>

                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="1" Grid.Row="0" Grid.Column="0" >
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>


                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Row="0" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10" Width="Auto">

                                            <Border Style="{StaticResource StackPanelLink}">
                                                <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="MotorDrive" PreviewMouseLeftButtonDown="Device_MouseLeftButtonDown">


                                                    <StackPanel Margin="20">
                                                        <Image Source="/assets/1.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40"  />
                                                    </StackPanel>

                                                    <Button Foreground="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource TextButton}" Width="120">
                                                        <Label HorizontalAlignment="Center" Foreground="#fff"  FontSize="8" FontWeight="Bold">
                                                            <TextBlock>MOTOR <LineBreak/>DRIVES</TextBlock>
                                                        </Label>

                                                    </Button>
                                                </StackPanel>
                                            </Border>


                                        </Grid>

                                        <Grid Grid.Row="1" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10" Width="Auto">

                                            <Border Style="{StaticResource StackPanelLink}" Opacity="0.8">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="WeightModule" PreviewMouseLeftButtonDown="Device_MouseLeftButtonDown">


                                                    <StackPanel Margin="20">
                                                        <Image Source="/assets/2.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40"  />
                                                    </StackPanel>

                                                    <Button Foreground="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource TextButton}" Width="120">
                                                        <Label HorizontalAlignment="Center" Foreground="#fff"  FontSize="8" FontWeight="Bold">
                                                            <TextBlock><Run Text="  WEIGHT"/> <LineBreak/>MODULES</TextBlock>
                                                        </Label>

                                                    </Button>
                                                </StackPanel>
                                            </Border>


                                        </Grid>
                                        <Grid Grid.Row="2" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10" Width="Auto">

                                            <Border Style="{StaticResource StackPanelLink}" Opacity="0.8" Height="113" VerticalAlignment="Bottom">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="NetCamera" PreviewMouseLeftButtonDown="Device_MouseLeftButtonDown">


                                                    <StackPanel Margin="20">
                                                        <Image Source="/assets/3.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40"  />
                                                    </StackPanel>

                                                    <Button Foreground="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource TextButton}" Width="120">
                                                        <Label HorizontalAlignment="Center" Foreground="#fff"  FontSize="8" FontWeight="Bold">
                                                            <TextBlock>NETWORK <LineBreak/>CAMERAS</TextBlock>
                                                        </Label>

                                                    </Button>
                                                </StackPanel>
                                            </Border>


                                        </Grid>

                                    </Grid>
                                </StackPanel>
                            </Border>
                            <Grid Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#f4f4f4" Cursor="Arrow">
                                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="MotorDriveArea" Background="Transparent" Visibility="Visible">
                                    <Label Content="Motor Derive Area" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="WeightModuleArea" Background="Transparent" Visibility="Hidden">
                                    <Label Content="Weight Module Area" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                                </StackPanel>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="NetCameraArea" Background="Transparent" Visibility="Hidden">
                                    <TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">
                                        
                                        <TabItem BorderBrush="#0082ca" BorderThickness="1">
                                            <TabItem.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="DISCOVER NETWORK CAMERA"/>
                                                </StackPanel>
                                            </TabItem.Header>
                                            <Border BorderBrush="#eee" BorderThickness="1" Background="#fff" CornerRadius="5" Margin="6" Padding="10">
                                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <StackPanel Margin="5">
                                                            <Button x:Name="DiscoverDevice" Content="Discover" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#0082ca" Foreground="#fff" Click="DiscoverDevice_Click" Cursor="Hand"/>
                                                        </StackPanel>
                                                        <StackPanel Margin="5">
                                                            <Button x:Name="StopDiscovery" Content="Stop" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Red" Foreground="White" IsEnabled="False" Cursor="Hand" Click="StopDiscovery_Click"/>
                                                        </StackPanel>
                                                    </StackPanel>
                                                        
                                                    <Grid Grid.Row="1">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="30"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid Grid.Row="0" Margin="2">
                                                            <Grid.ColumnDefinitions>
                                                                
                                                                <ColumnDefinition Width="100"/>
                                                                <ColumnDefinition Width="120"/>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            
                                                            <Border Grid.Column="0" BorderBrush="#9c9c9c" BorderThickness="1">
                                                                <Grid>
                                                                    <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="Name" Foreground="#007acc" FontSize="12" FontWeight="Bold"/>
                                                                </Grid>
                                                            </Border>

                                                            <Border Grid.Column="1" BorderBrush="#9c9c9c" BorderThickness="1">
                                                                <Grid>
                                                                    <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="IP" Foreground="#007acc" FontSize="12" FontWeight="Bold"/>
                                                                </Grid>
                                                            </Border>
                                                            <Border Grid.Column="2" BorderBrush="#9c9c9c" BorderThickness="1">
                                                                <Grid>
                                                                    <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="Port" Foreground="#007acc" FontSize="12" FontWeight="Bold"/>
                                                                </Grid>
                                                            </Border>
                                                            <Border Grid.Column="3" BorderBrush="#9c9c9c" BorderThickness="1">
                                                                <Grid>
                                                                    <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="Action" Foreground="#007acc" FontSize="12" FontWeight="Bold"/>
                                                                </Grid>
                                                            </Border>

                                                        </Grid>
                                                        <Grid Grid.Row="1" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                            <DataGrid Height="Auto" x:Name="DiscoveredDeviceList" Margin="2" Background="White" HeadersVisibility="None" RowBackground="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutoGenerateColumns="False" IsReadOnly="False" GridLinesVisibility="None" CanUserAddRows="False">
                                                                <DataGrid.Columns>
                                                                   
                                                                    <DataGridTextColumn Binding="{Binding Name}" IsReadOnly="True" Width="100" FontSize="12"/>
                                                                    <DataGridTextColumn Binding="{Binding DeviceIP}" IsReadOnly="True" Width="120" FontSize="12"/>
                                                                    <DataGridTextColumn Binding="{Binding DevicePort}" IsReadOnly="True" Width="50" FontSize="12"/>
                                                                    <DataGridTemplateColumn Width="*">
                                                                        <DataGridTemplateColumn.CellTemplate>
                                                                            <DataTemplate>
                                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                    <StackPanel>
                                                                                        <Button Content="{Binding ConnectMessage}" Background="#0082ca" Foreground="White" BorderBrush="#0082ca" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" Tag="{Binding DeviceId}" Click="Connect_Click" IsEnabled="{Binding Disconnected}" Width="Auto" Padding="5" FontSize="12"/>
                                                                                    </StackPanel>
                                                                                    <StackPanel>
                                                                                        <Button Margin="5,0,0,0" Content="{Binding DisconnectMessage}" Background="Red" Foreground="White" BorderBrush="Red" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" Tag="{Binding DeviceId}" Click="Disconnect_Click" IsEnabled="{Binding Connected}" Width="Auto" Padding="5" FontSize="12"/>
                                                                                    </StackPanel>
                                                                                    

                                                                                    
                                                                                </StackPanel>                                                              
                                                                            </DataTemplate>
                                                                            
                                                                        </DataGridTemplateColumn.CellTemplate>
                                                                      
                                                                    </DataGridTemplateColumn>
                                                                </DataGrid.Columns>
                                                            </DataGrid>                                                         
                                                        </Grid>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                        </TabItem>
                                        <TabItem BorderBrush="#0082ca" BorderThickness="1">
                                            <TabItem.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="USB Camera"/>
                                                </StackPanel>
                                            </TabItem.Header>
                                            <Border BorderBrush="#eee" BorderThickness="1" Background="#fff" CornerRadius="5" Margin="6">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="200"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid Grid.Row="0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                            <Button HorizontalAlignment="Right" Content="Connect" VerticalAlignment="Bottom" BorderBrush="#0082ca" Background="#fff" Foreground="#0082ca" Margin="5" Click="ConnectUSBCamera_Click" x:Name="ConnectUSBCamera"/>
                                                        </Grid>
                                                        <Grid Grid.Column="1">
                                                            <Button HorizontalAlignment="Left" Content="Disconnect" VerticalAlignment="Bottom" BorderBrush="Red" Background="#fff" Foreground="Red" IsEnabled="False" Margin="5" Click="DisconnectUSBCam_Click" x:Name="DisconnectUSBCam"/>
                                                        </Grid>

                                                    </Grid>
                                                    <Grid Grid.Row="1">
                                                        <Label x:Name="USBCam_error" Foreground="Red" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Grid>
                                                
                                            </Border>
                                        </TabItem>
                                        
                                    </TabControl>
                                </Grid>
                                
                            </Grid>

                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Style="{StaticResource TabItemStyle}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Sounds" Foreground="#fff" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Background="#fff" BorderBrush="#fff" BorderThickness="1" Margin="7.5,2,0,2.5" Padding="2" CornerRadius="0,0,0,10">
                        <Grid Background="#fefefe" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="210"/>
                                <ColumnDefinition Width="526"/>

                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="#fff" BorderThickness="1" Grid.Row="0" Grid.Column="0" >
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>


                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Row="0" Grid.Column="0" Background="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10" Width="Auto">

                                            <Border Style="{StaticResource StackPanelLink}">
                                                <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">


                                                    <StackPanel Margin="20">
                                                        <Image Source="/assets/4.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40"  />
                                                    </StackPanel>

                                                    <Button Foreground="#fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource TextButton}" Width="120">
                                                        <Label HorizontalAlignment="Center" Foreground="#fff"  FontSize="8" FontWeight="Bold">
                                                            <TextBlock>
                                                                <Run Text="MOTOR SOUND"/>
                                                                <LineBreak/>
                                                                <Run Text="          0.85"/>
                                                            </TextBlock>
                                                        </Label>

                                                    </Button>
                                                </StackPanel>
                                            </Border>


                                        </Grid>



                                    </Grid>
                                </StackPanel>
                            </Border>
                            <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#eee">
                                <Label Content="Drop or Select Sound Here.."/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </TabItem>


            </TabControl>
            <Border Grid.Row="0" Grid.Column="1" Background="Transparent" Margin="3">
                <Grid  Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="0" Grid.Column="0" Background="Transparent">
                            <Button Foreground="#fff" Content="Reset" Click="Reset_Click" HorizontalAlignment="Right" Margin="2,0,3,0" Style="{StaticResource ResetButton}" Cursor="Hand" ToolTip="Reset" />
                        </Grid>
                        <Grid Grid.Row="0" Grid.Column="1" Background="Transparent">
                            <Button HorizontalAlignment="Right" Cursor="Hand"  x:Name="Run" Content="Run" Margin="0,2,2,2" ToolTip="Run" Style="{StaticResource RunButton}" Foreground="#fff" />
                        </Grid>
                        <Grid Grid.Column="2" Grid.Row="0" Background="Transparent">
                            <Button x:Name="SaveBtn"  Content="Save" ToolTip="Save" Cursor="Hand" Foreground="#041124" Margin="2,2,0,2" Style="{StaticResource SaveButton}" Click="Save_Click"/>
                        </Grid>

                    </Grid>

                    <Border Grid.Row="1" Background="#fff" CornerRadius="0,12,10,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>


                            <Grid Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <StackPanel x:Name="NetworkCameraOuputArea" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Hidden">
                                <GroupBox Header="Live Camera Stream" HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Top" Height="250">
                                    <Grid HorizontalAlignment="Stretch" Height="240" VerticalAlignment="Top">
                                        <controls:VideoViewerWPF Name="videoViewer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black"/>
                                    </Grid>
                                </GroupBox>
                                </StackPanel>
                            </Grid>

                        </Grid>
                    </Border>

                </Grid>
            </Border>

        </Grid>
    </Border>

</Page>
